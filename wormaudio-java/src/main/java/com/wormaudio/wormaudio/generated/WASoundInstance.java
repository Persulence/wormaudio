/*
 * Copyright (c)  2025 Persulence
 *
 * This file is part of the WormAudio project.
 *
 * WormAudio is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * WormAudio is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License along with Foobar. If not, see https://www.gnu.org/licenses/.
 *
 */

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.wormaudio.wormaudio.generated;

public class WASoundInstance {
  private transient long swigCPtr;
  private transient boolean swigCMemOwn;

  protected WASoundInstance(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(WASoundInstance obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwn = own;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        WormAudioInternalJNI.delete_WASoundInstance(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public TransportControl getTransport() {
    long cPtr = WormAudioInternalJNI.WASoundInstance_transport_get(swigCPtr, this);
    return (cPtr == 0) ? null : new TransportControl(cPtr, false);
  }

  public boolean canFree() {
    return WormAudioInternalJNI.WASoundInstance_canFree(swigCPtr, this);
  }

  public void markDone() {
    WormAudioInternalJNI.WASoundInstance_markDone(swigCPtr, this);
  }

}
